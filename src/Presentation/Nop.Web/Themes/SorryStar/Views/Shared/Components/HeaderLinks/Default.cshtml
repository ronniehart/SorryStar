@model HeaderLinksModel
@using Nop.Core.Domain.Customers
@inject Nop.Core.IWebHelper webHelper

@if (Model.IsAuthenticated)
{
    <li class="nav-item"><a class="nav-link" href="@Url.RouteUrl("CustomerInfo")" class="ico-account">@T("Account.MyAccount")@*@Model.CustomerName*@</a></li>
    <li class="nav-item"><a class="nav-link" href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>
}
else
{
    var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
    ? url.ToString()
    : webHelper.GetRawUrl(Context.Request);

    <li class="nav-item"><a class="nav-link" href="@Url.RouteUrl("Login", new { returnUrl })" class="ico-login">@T("Account.Login")</a></li>
}
@if (Model.AllowPrivateMessages)
{
    <li class="nav-item">
        <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
            <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
            <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
        </a>
    </li>
}
@if (Model.WishlistEnabled)
{
    <li class="nav-item">
        <a href="@Url.RouteUrl("Wishlist")" class="nav-link" style="position: relative;">
            <i class="fa-solid fa-thumbtack"></i>
            @if (Model.WishlistItems > 0)
            {
                <span class="nav-quantity">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
            }
            @if (Model.WishlistItems > 9)
            {
                <span class="nav-quantity">@T("Wishlist.HeaderQuantity", "+")</span>
            }
        </a>
    </li>
}
@if (Model.ShoppingCartEnabled)
{
    <li class="nav-item">
        <a href="@Url.RouteUrl("ShoppingCart")" class="nav-link" style="position: relative;">
            <i class="fa-solid fa-cart-shopping"></i>
            @if (Model.ShoppingCartItems > 0)
            {
                <span class="nav-quantity">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
            }
            @if (Model.ShoppingCartItems > 9)
            {
                <span class="nav-quantity">@T("ShoppingCart.HeaderQuantity", "+")</span>
            }
        </a>
    </li>
}
@if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
{
    //new private message notification
    <script asp-location="Footer">
        $(document).ready(function () {
            displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
        });
    </script>
}
@if (Model.ShoppingCartEnabled)
{
    <script asp-location="Footer">
        $(document).ready(function () {
            $('.header').on('mouseenter', '#topcartlink', function () {
                $('#flyout-cart').addClass('active');
            });
            $('.header').on('mouseleave', '#topcartlink', function () {
                $('#flyout-cart').removeClass('active');
            });
            $('.header').on('mouseenter', '#flyout-cart', function () {
                $('#flyout-cart').addClass('active');
            });
            $('.header').on('mouseleave', '#flyout-cart', function () {
                $('#flyout-cart').removeClass('active');
            });
        });
    </script>
}
